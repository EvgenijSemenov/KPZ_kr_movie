/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2017-05-26 04:56:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_002dfilm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/Admin/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1495615092441L));
    _jspx_dependants.put("jar:file:/C:/Users/Admin/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153374282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        \r\n");
      out.write("        <link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">\r\n");
      out.write("        <script src=\"../js/bootstrap.min.js\"></script>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <fmt:requestEncoding value = \"UTF-8\" />\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <nav class=\"navbar navbar-inverse\">\r\n");
      out.write("                <div class=\"col-md-3 col-md-offset-1\">\r\n");
      out.write("                    <img alt=\"Logo\" src=\"../images/logo.png\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-4 col-md-offset-4\">\r\n");
      out.write("                    <ul class=\"nav navbar-nav\">\r\n");
      out.write("                        <li><a href=\"/\">Головна</a></li>\r\n");
      out.write("                        <li><a href=\"#\">Сеанси</a></li>\r\n");
      out.write("                     </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <form action=\"/film\" method=\"post\"  role=\"form\" data-toggle=\"validator\" >\r\n");
      out.write("                <h2>Додати фільм</h2>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"name\" class=\"control-label col-xs-4\">Ім'я:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${employee.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Пірати Карибського моря: Помста Салазара\" required=\"true\"/>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"director\" class=\"control-label col-xs-4\">Режисер:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"director\" id=\"director\" class=\"form-control\" placeholder=\"Хоакім Роннінґ,\tЕспен Сандберґ\" required=\"true\"/>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"cast\" class=\"control-label col-xs-4\">В ролях:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"cast\" id=\"cast\" class=\"form-control\" placeholder=\"Джонні Депп, Кая Скоделаріо, Брентон Туєйтес, Орландо Блум\" required=\"true\"/>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"ageLimit\" class=\"control-label col-xs-10\">Вікові обмеження:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"ageLimit\" id=\"ageLimit\" class=\"form-control\" placeholder=\"12\" required=\"true\"/>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"description\" class=\"control-label col-xs-4\">Опис:</label>\r\n");
      out.write("                    <textarea name=\"description\" id=\"description\" class=\"form-control\" rows=\"5\" placeholder=\"Вічний щасливчик капітан Джек Воробей переживає важкі часи, адже удача його покинула. Колись дуже давно в молодості Джек Спарроу знищив лютого іспанського борця з піратами капітана Салазара. Цей страшний капітан утік разом зі своєю командою з Диявольського трикутника, щоб знищити всіх піратів, особливо Горобця. Єдиний шанс Джека вижити – знайти легендарний тризуб Посейдона. Цей неймовірно сильний артефакт дозволить своєму господареві бути володарем усіх морів. І допоможуть у цьому капітану Джеку Горобцю його нові друзі – Генрі й Каріна Сміт. Неймовірні пригоди Джека Спарроу тривають!\" required required=\"true\"></textarea>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"posterUrl\" class=\"control-label col-xs-10\">URL зображення:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"posterUrl\" id=\"posterUrl\" class=\"form-control\" placeholder=\"http://cherkassy.multiplex.ua/Images/Upload/Пірати_карибського_моря_3Д.jpg\" required=\"true\"/>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"trailerUrl\" class=\"control-label col-xs-10\">URL трейлера:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"trailerUrl\" id=\"trailerUrl\" class=\"form-control\" placeholder=\"https://www.youtube.com/watch?v=muyqPJN07yE\" required=\"true\"/>\r\n");
      out.write("                    </br>\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary btn-md pull-right\">Додати</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"panel panel-default col-md-10 col-md-offset-1\">\r\n");
      out.write("                <div class=\"panel-body\">\r\n");
      out.write("                    <center>Курсова робота з дисципліни «Конструювання програмного забезпечення». Виконав студент 3-го курсу, групи ЗПЗ-144, Семенов Є.В.</center>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
